module LList;

trait TInfo<T> {
  fun add(head: T): inst;
}

value class LengthInfo<T>{length: Int = 0} uses TInfo<T> {
  fun add(_head: T): LengthInfo<T> {
    !this.length = this.length + 1;
    this
  }
}

value class MinInfo<T: Orderable>{candidate: ?T = None()} uses TInfo<T> {
  fun add(head: T): MinInfo<T> {
    this.candidate match {
    | None() -> !this.candidate = Some(head)
    | Some(x) if (head < x) -> !this.candidate = Some(head)
    | _ -> void
    };
    this
  }
}
